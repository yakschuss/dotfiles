if &compatible
  set nocompatible
end

" Shim command and function to allow migration from Vundle to vim-plug.
function! VundleToPlug(vundle_command, arg, ...)
  echom "You are using Vundle's `".a:vundle_command."` command to declare plugins. Dotfiles now uses vim-plug for plugin management. Please rename uses of `".a:vundle_command."` to `Plug`. Plugin was '".a:arg."'."
  let vim_plug_options = {}

  if a:0 > 0
    if has_key(a:1, 'name')
      let name = a:1.name
      let vim_plug_options.dir = "$HOME/.vim/bundle/".a:1.name
    endif

    if has_key(a:1, 'rtp')
      let vim_plug_options.rtp = a:1.rtp
    endif
  endif

  Plug a:arg, vim_plug_options
endfunction

com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos

" run native commands
Plug 'christoomey/vim-run-interactive'

" integrate vim with tmux
Plug 'christoomey/vim-tmux-navigator'
" Plug 'christoomey/vim-tmux-runner'

"ctrl p integration
Plug 'ctrlpvim/ctrlp.vim'

"test runner integration
Plug 'janko-m/vim-test'

"edit files that don't exist by creating files
Plug 'pbrisbin/vim-mkdir'

"syntax checking
Plug 'scrooloose/syntastic'

"bundler integration
Plug 'tpope/vim-bundler'

"map cp to pbcopy
Plug 'christoomey/vim-system-copy'

"fzf integration
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

"automatic ending for certain code structures
Plug 'tpope/vim-endwise'

"UNIX command integration
Plug 'tpope/vim-eunuch'

"git wrapper
Plug 'tpope/vim-fugitive'

" gem configuration 
Plug 'tpope/vim-projectionist'

"rails integration
Plug 'tpope/vim-rails'

"vim-rails like support for non rails projects
Plug 'tpope/vim-rake'

"bundler support projects
Plug 'tpope/vim-bundler'

"allow plugins to repeat using . command
Plug 'tpope/vim-repeat'

"interface with hub commands in git commit editor
Plug 'tpope/vim-rhubarb'

"use surround commands to surround text objects
Plug 'tpope/vim-surround'

"comment out text objects
Plug 'vim-scripts/tComment'

"provide statusbar airline
Plug 'vim-airline/vim-airline'

" syntax highlighting for different languages. lazy load
Plug 'sheerun/vim-polyglot'

"emmet for vim
Plug 'mattn/emmet-vim'

" automatically close HTML tags
Plug 'alvan/vim-closetag'

"integeration with dash
Plug 'rizzatti/dash.vim'

" show git changes in sidebar
Plug 'airblade/vim-gitgutter'

"startup profiler
Plug 'tweekmonster/startuptime.vim'

"search and replace using quickfix
Plug 'vim-scripts/greplace.vim'

"textobjects - ruby
Plug 'nelstrom/vim-textobj-rubyblock'
Plug 'kana/vim-textobj-user'

"mappings
Plug 'tpope/vim-unimpaired'


if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
